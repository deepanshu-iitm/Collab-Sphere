{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      adRequest: {\n        influencer_id: '',\n        messages: '',\n        requirements: '',\n        payment_amount: '',\n        status: 'pending'\n      },\n      campaignId: null\n    };\n  },\n  created() {\n    this.campaignId = this.$route.params.campaignId;\n  },\n  methods: {\n    submitForm() {\n      if (!this.campaignId) {\n        console.error('Campaign ID is not available');\n        return;\n      }\n      const token = localStorage.getItem('access_token');\n      fetch(`http://127.0.0.1:5000/sponsor/campaigns/${this.campaignId}/adrequests`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.adRequest)\n      }).then(response => {\n        if (response.ok) {\n          this.$router.push(`/sponsor/campaigns/${this.campaignId}/adrequests`);\n        } else {\n          return response.json().then(data => {\n            throw new Error(data.msg || 'Failed to create ad request');\n          });\n        }\n      }).catch(error => {\n        console.error('Error creating ad request:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","adRequest","influencer_id","messages","requirements","payment_amount","status","campaignId","created","$route","params","methods","submitForm","console","error","token","localStorage","getItem","fetch","method","headers","body","JSON","stringify","then","response","ok","$router","push","json","Error","msg","catch"],"sources":["C:\\Users\\deepa\\deepanshu\\IIT Madras\\appdev2\\influencer\\frontend\\src\\views\\CreateAdRequest.vue"],"sourcesContent":["<template>\r\n  <div class=\"create-ad-request-page\">\r\n    <header class=\"hero\">\r\n      <div class=\"hero-content\">\r\n        <h1>Create New Ad Request</h1>\r\n      </div>\r\n    </header>\r\n    <div class=\"form-container\">\r\n      <form @submit.prevent=\"submitForm\">\r\n        <div class=\"form-group\">\r\n          <label for=\"influencer_id\">Influencer ID:</label>\r\n          <input type=\"text\" v-model=\"adRequest.influencer_id\" id=\"influencer_id\" required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"messages\">Messages:</label>\r\n          <textarea v-model=\"adRequest.messages\" id=\"messages\" required></textarea>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"requirements\">Requirements:</label>\r\n          <textarea v-model=\"adRequest.requirements\" id=\"requirements\" required></textarea>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"payment_amount\">Payment Amount:</label>\r\n          <input type=\"number\" v-model=\"adRequest.payment_amount\" id=\"payment_amount\" required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"status\">Status:</label>\r\n          <select v-model=\"adRequest.status\" id=\"status\" required>\r\n            <option value=\"pending\">Pending</option>\r\n            <option value=\"approved\">Approved</option>\r\n            <option value=\"rejected\">Rejected</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      adRequest: {\r\n        influencer_id: '',\r\n        messages: '',\r\n        requirements: '',\r\n        payment_amount: '',\r\n        status: 'pending'\r\n      },\r\n      campaignId: null\r\n    };\r\n  },\r\n  created() {\r\n    this.campaignId = this.$route.params.campaignId;\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      if (!this.campaignId) {\r\n        console.error('Campaign ID is not available');\r\n        return;\r\n      }\r\n\r\n      const token = localStorage.getItem('access_token');\r\n\r\n      fetch(`http://127.0.0.1:5000/sponsor/campaigns/${this.campaignId}/adrequests`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(this.adRequest)\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          this.$router.push(`/sponsor/campaigns/${this.campaignId}/adrequests`);\r\n        } else {\r\n          return response.json().then(data => {\r\n            throw new Error(data.msg || 'Failed to create ad request');\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error creating ad request:', error);\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.create-ad-request-page {\r\n  background: #f8f9fa;\r\n  padding: 40px;\r\n}\r\n\r\n.hero {\r\n  background: linear-gradient(to right, #e07a7a, #d9534f);\r\n  color: #fff;\r\n  padding: 40px;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.hero-content h1 {\r\n  font-size: 2.5rem;\r\n  margin-bottom: 20px;\r\n  font-weight: 600;\r\n}\r\n\r\n.form-container {\r\n  margin-top: 30px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-group label {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input,\r\n.form-group textarea,\r\n.form-group select {\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n  font-size: 1rem;\r\n}\r\n\r\n.form-group textarea {\r\n  resize: vertical;\r\n  min-height: 100px;\r\n}\r\n\r\n.btn {\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: background 0.3s, transform 0.3s;\r\n}\r\n\r\n.btn-primary {\r\n  background: #d9534f;\r\n  color: #fff;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background: #c94c4c;\r\n}\r\n</style>\r\n"],"mappings":";AAwCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,aAAa,EAAE,EAAE;QACjBC,QAAQ,EAAE,EAAE;QACZC,YAAY,EAAE,EAAE;QAChBC,cAAc,EAAE,EAAE;QAClBC,MAAM,EAAE;MACV,CAAC;MACDC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,UAAS,GAAI,IAAI,CAACE,MAAM,CAACC,MAAM,CAACH,UAAU;EACjD,CAAC;EACDI,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC,IAAI,CAACL,UAAU,EAAE;QACpBM,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;QAC7C;MACF;MAEA,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAElDC,KAAK,CAAC,2CAA2C,IAAI,CAACX,UAAU,aAAa,EAAE;QAC7EY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB,CAAC;QACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACtB,SAAS;MACrC,CAAC,EACAuB,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACf,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,sBAAsB,IAAI,CAACrB,UAAU,aAAa,CAAC;QACvE,OAAO;UACL,OAAOkB,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACL,IAAI,CAACxB,IAAG,IAAK;YAClC,MAAM,IAAI8B,KAAK,CAAC9B,IAAI,CAAC+B,GAAE,IAAK,6BAA6B,CAAC;UAC5D,CAAC,CAAC;QACJ;MACF,CAAC,EACAC,KAAK,CAAClB,KAAI,IAAK;QACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,CAAC;IACJ;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}