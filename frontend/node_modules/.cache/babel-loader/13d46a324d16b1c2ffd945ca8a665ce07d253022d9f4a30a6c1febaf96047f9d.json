{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'CampaignsPage',\n  data() {\n    return {\n      campaigns: []\n    };\n  },\n  created() {\n    this.fetchCampaigns();\n  },\n  methods: {\n    fetchCampaigns() {\n      const token = localStorage.getItem('access_token');\n      fetch('http://127.0.0.1:5000/sponsor/campaigns', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        console.log(data); // Log data to verify its structure\n        this.campaigns = data;\n      }).catch(error => {\n        console.error('Error fetching campaigns:', error);\n      });\n    },\n    createNewCampaign() {\n      this.$router.push('/sponsor/campaigns/new');\n    },\n    editCampaign(id) {\n      this.$router.push(`/sponsor/campaigns/${id}/edit`);\n    },\n    deleteCampaign(id) {\n      const token = localStorage.getItem('access_token');\n      fetch(`http://127.0.0.1:5000/sponsor/campaigns/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => {\n        if (response.ok) {\n          this.fetchCampaigns();\n        } else {\n          throw new Error('Failed to delete campaign');\n        }\n      }).catch(error => {\n        console.error('Error deleting campaign:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","campaigns","created","fetchCampaigns","methods","token","localStorage","getItem","fetch","headers","then","response","ok","Error","status","json","console","log","catch","error","createNewCampaign","$router","push","editCampaign","id","deleteCampaign","method"],"sources":["C:\\Users\\deepa\\deepanshu\\IIT Madras\\appdev2\\influencer\\frontend\\src\\views\\CampaignsPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"campaigns-page\">\r\n    <header class=\"hero\">\r\n      <div class=\"hero-content\">\r\n        <h1>Your Campaigns</h1>\r\n        <button class=\"btn btn-primary\" @click=\"createNewCampaign\">Create New Campaign</button>\r\n      </div>\r\n    </header>\r\n    <div class=\"campaign-list\">\r\n      <div v-for=\"campaign in campaigns\" :key=\"campaign.id\" class=\"campaign-card\">\r\n        <h2>{{ campaign.name }}</h2>\r\n        <p>{{ campaign.description }}</p>\r\n        <p>Start Date: {{ campaign.start_date }}</p>\r\n        <p>End Date: {{ campaign.end_date }}</p>\r\n        <p>Budget: {{ campaign.budget }}</p>\r\n        <p>Visibility: {{ campaign.visibility }}</p>\r\n        <p>Goals: {{ campaign.goals }}</p>\r\n        <div class=\"button-group\">\r\n          <button class=\"btn btn-warning\" @click=\"editCampaign(campaign.id)\">Edit</button>\r\n          <button class=\"btn btn-danger\" @click=\"deleteCampaign(campaign.id)\">Delete</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CampaignsPage',\r\n  data() {\r\n    return {\r\n      campaigns: []\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchCampaigns()\r\n  },\r\n  methods: {\r\n    fetchCampaigns() {\r\n      const token = localStorage.getItem('access_token');\r\n      fetch('http://127.0.0.1:5000/sponsor/campaigns', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        console.log(data);  // Log data to verify its structure\r\n        this.campaigns = data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching campaigns:', error);\r\n      });\r\n    },\r\n    createNewCampaign() {\r\n      this.$router.push('/sponsor/campaigns/new');\r\n    },\r\n    editCampaign(id) {\r\n      this.$router.push(`/sponsor/campaigns/${id}/edit`);\r\n    },\r\n    deleteCampaign(id) {\r\n      const token = localStorage.getItem('access_token');\r\n      fetch(`http://127.0.0.1:5000/sponsor/campaigns/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          this.fetchCampaigns();\r\n        } else {\r\n          throw new Error('Failed to delete campaign');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error deleting campaign:', error);\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.campaigns-page {\r\n  background: #f8f9fa;\r\n  padding: 40px;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}\r\n\r\n.hero {\r\n  background: linear-gradient(to right, #e07a7a, #d9534f);\r\n  color: #fff;\r\n  padding: 40px;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.hero-content h1 {\r\n  font-size: 2.5rem;\r\n  margin-bottom: 20px;\r\n  font-weight: 600;\r\n}\r\n\r\n.hero-content .btn-primary {\r\n  background: #fff;\r\n  color: #d9534f;\r\n  padding: 12px 24px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background 0.3s, color 0.3s;\r\n}\r\n\r\n.hero-content .btn-primary:hover {\r\n  background: #d9534f;\r\n  color: #fff;\r\n}\r\n\r\n.campaign-list {\r\n  margin-top: 30px;\r\n}\r\n\r\n.campaign-card {\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  margin: 20px 0;\r\n  padding: 20px;\r\n  text-align: left;\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.campaign-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.campaign-card h2 {\r\n  margin-top: 0;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.btn {\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: background 0.3s, transform 0.3s;\r\n}\r\n\r\n.btn:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.btn-primary {\r\n  background: #d9534f;\r\n  color: #fff;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background: #c94c4c;\r\n}\r\n\r\n.btn-warning {\r\n  background: #f0ad4e;\r\n  color: #fff;\r\n}\r\n\r\n.btn-warning:hover {\r\n  background: #ec971f;\r\n}\r\n\r\n.btn-danger {\r\n  background: #d9534f;\r\n  color: #fff;\r\n}\r\n\r\n.btn-danger:hover {\r\n  background: #c9302c;\r\n}\r\n</style>\r\n"],"mappings":";AA2BA,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPD,cAAcA,CAAA,EAAG;MACf,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClDC,KAAK,CAAC,yCAAyC,EAAE;QAC/CC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUJ,KAAK;QAClC;MACF,CAAC,EACAK,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC;QAC3D;QACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxB,CAAC,EACAL,IAAI,CAACV,IAAG,IAAK;QACZgB,OAAO,CAACC,GAAG,CAACjB,IAAI,CAAC,EAAG;QACpB,IAAI,CAACC,SAAQ,GAAID,IAAI;MACvB,CAAC,EACAkB,KAAK,CAACC,KAAI,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACJ,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,wBAAwB,CAAC;IAC7C,CAAC;IACDC,YAAYA,CAACC,EAAE,EAAE;MACf,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,sBAAsBE,EAAE,OAAO,CAAC;IACpD,CAAC;IACDC,cAAcA,CAACD,EAAE,EAAE;MACjB,MAAMnB,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClDC,KAAK,CAAC,2CAA2CgB,EAAE,EAAE,EAAE;QACrDE,MAAM,EAAE,QAAQ;QAChBjB,OAAO,EAAE;UACP,eAAe,EAAE,UAAUJ,KAAK;QAClC;MACF,CAAC,EACAK,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACf,IAAI,CAACT,cAAc,CAAC,CAAC;QACvB,OAAO;UACL,MAAM,IAAIU,KAAK,CAAC,2BAA2B,CAAC;QAC9C;MACF,CAAC,EACAK,KAAK,CAACC,KAAI,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACJ;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}